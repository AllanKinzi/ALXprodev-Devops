#!/bin/bash

POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
DATA_DIR="pokemon_data"
ERROR_FILE="errors.txt"
MAX_RETRIES=3
DELAY=2

mkdir -p "$DATA_DIR"
> "$ERROR_FILE"

fetch_pokemon() {
    local pokemon="$1"
    local attempt success=false

    echo "Fetching data for $pokemon..."
    for (( attempt=1; attempt<=MAX_RETRIES; attempt++ )); do
        response=$(curl -s -w "%{http_code}" -o "$DATA_DIR/$pokemon.json" \
                   "https://pokeapi.co/api/v2/pokemon/$pokemon")
        http_code="${response:(-3)}"

        if [[ "$http_code" == "200" ]]; then
            echo "Saved data to $DATA_DIR/$pokemon.json"
            success=true
            break
        else
            echo "Attempt $attempt failed for $pokemon (HTTP $http_code)"
            sleep "$DELAY"
        fi
    done

    if [[ "$success" == false ]]; then
        echo "Failed to fetch data for $pokemon after $MAX_RETRIES attempts" >> "$ERROR_FILE"
    fi
}

# Launch all fetches in parallel
for pokemon in "${POKEMON_LIST[@]}"; do
    fetch_pokemon "$pokemon" &
done

# Wait for all background jobs to finish
wait

echo
if [[ -s "$ERROR_FILE" ]]; then
    echo "Some requests failed. See $ERROR_FILE for details."
else
    echo "All Pok√©mon fetched successfully!"
fi
